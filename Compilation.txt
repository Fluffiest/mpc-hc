### Requirements for 32-bit and 64-bit builds ###

* TortoiseSVN
http://tortoisesvn.net/downloads

* Visual Studio 2008 SP1
http://msdn.microsoft.com/en-us/evalcenter/bb655861.aspx

* DirectX SDK (latest version)
http://msdn.microsoft.com/en-us/directx/aa937788.aspx

* Microsoft Windows SDK 2008
http://www.microsoft.com/downloads/details.aspx?FamilyID=e6e1c3df-a74f-4207-8586-711ebe331cdc&displaylang=en

* Visual Studio 2008 Service Pack 1 ATL Security Update
http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=294de390-3c94-49fb-a014-9a38580e64cb

* MinGW32
http://sourceforge.net/projects/mingw/

* YASM
http://www.tortall.net/projects/yasm/wiki/Download


TIP:
An easy to use custom installer for MinGW32 can be downloaded here:
http://ul.to/huezwv

This installer includes a full MinGW32 environment, including MSYS and YASM.
It also automatically adds the required CC/MING32/MSYS environment variables, so there is no need to create them manually.


### Additional requirements for 64-bit build ###

* MinGW64
http://sourceforge.net/projects/mingw-w64/files/


### Lib files ###

* x86: Copy the following two files from the MinGW32 lib directory to the lib directory of the source code:
libgcc.a
libmingwex.a

* x64: use the script buildffmpeg.sh, run it from MSYS bash.


### Windows Environment variables ###

* Add an environment variable called "CC" and give it the value "gcc" (both without quotes).
* Add an environment variable called "MSYS" and set it with the path of the MSYS root directory
	Ex : MSYS = c:\MSYS\
* Add an environment variable called "MINGW32" and set it with the path of the MinGW32 root directory
	Ex : MINGW32 = c:\MinGW32\
* Add an environment variable called "MINGW64" and set it with the path of the MinGW64 root directory
	Ex : MINGW64 = c:\MinGW64\


### How to checkout the source code from the SVN repository ###

This assumes you have TortoiseSVN installed.
1) Create an empty directory where you want to store the source files.
2) Right-click on that directory and choose "SVN checkout".
3) Put https://mpc-hc.svn.sourceforge.net/svnroot/mpc-hc mpc-hc in "URL of Repository" and press OK.
4) Wait for the source tree to be downloaded.


### Configuring Visual Studio ###

You need to add the locations of the DirectX SDK directories to the settings in Visual Studio. This is usually already done automatically by the DirectX SDK installer.

1) In the Visual Studio menu, go to: Tools -> Options -> Projects and Solutions -> VC++ Directories
2) Add the location of the Include directory of the latest DirectX SDK.
3) Repeat the step 2 for the x64 platform.
4) Add the location of the Lib\x86 directory of the latest DirectX SDK to the Win32 platform.
5) Add the location of the Lib\x64 directory of the latest DirectX SDK to the x64 platform.
 
 
### Integration of Windows 7 SDK (non m ###

To build Mpc-hc with Windows 7 SDK f

1) Download and install Windows 7 SDK from Microsoft website (http://www.microsoft.com/downloads/details.aspx?FamilyID=71deb800-c591-4f97-a900-bea146e4fae1&displaylang=en)
2) Open regional settings, and set it to English (see this link for explanations : http://blogs.msdn.com/windowssdk/archive/2009/08/21/windows-sdk-configuration-tool-may-report-an-error-when-os-display-format-is-not-english.aspx)
3) Start "Windows SDK Configuration Tool" from start menu, and set "Installed Windows SDK" to "v7.0"
4) Revert your regional settings to initial value